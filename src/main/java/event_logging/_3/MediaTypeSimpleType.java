//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.08.25 at 03:35:00 PM BST 
//


package event_logging._3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for MediaTypeSimpleType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="MediaTypeSimpleType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="HardDisk"/>
 *     &lt;enumeration value="USBMassStorage"/>
 *     &lt;enumeration value="BluRay"/>
 *     &lt;enumeration value="DVD"/>
 *     &lt;enumeration value="CD"/>
 *     &lt;enumeration value="FloppyDisk"/>
 *     &lt;enumeration value="Tape"/>
 *     &lt;enumeration value="Other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "MediaTypeSimpleType")
@XmlEnum
public enum MediaTypeSimpleType {

    @XmlEnumValue("HardDisk")
    HARD_DISK("HardDisk"),
    @XmlEnumValue("USBMassStorage")
    USB_MASS_STORAGE("USBMassStorage"),
    @XmlEnumValue("BluRay")
    BLU_RAY("BluRay"),
    DVD("DVD"),
    CD("CD"),
    @XmlEnumValue("FloppyDisk")
    FLOPPY_DISK("FloppyDisk"),
    @XmlEnumValue("Tape")
    TAPE("Tape"),
    @XmlEnumValue("Other")
    OTHER("Other");
    private final String value;

    MediaTypeSimpleType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MediaTypeSimpleType fromValue(String v) {
        for (MediaTypeSimpleType c: MediaTypeSimpleType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
